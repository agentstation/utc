name: Test, Vet, and Coverage

on:
  push:
    branches: ["master"]
    tags: ["v*"]
  pull_request:
    branches: ["master"]

env:
  GITHUB_ORG: ${{ github.repository_owner }}

jobs:
  # Test core functionality (Go 1.18+, no YAML)
  test-core:
    name: Core Tests (Go ${{ matrix.go-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.18", "1.19", "1.20", "1.21", "1.22", "1.23", "1.24"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run go mod download
        run: make install

      - name: Lint Go Code (latest Go only)
        if: matrix.go-version == '1.24'
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Run go vet
        run: make vet

      - name: Build package
        run: go build ./...

      - name: Run Core Tests (without YAML)
        run: make test

      - name: Run Core Tests with Race Detection
        if: matrix.go-version >= '1.20'
        run: go test -race ./...

  # Test YAML functionality (Go 1.21+ required for go-yaml)
  test-yaml:
    name: YAML Tests (Go ${{ matrix.go-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.21", "1.22", "1.23", "1.24"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Run go mod download
        run: make install

      - name: Build package with YAML
        run: go build ./...

      - name: Run YAML Tests
        run: make test-yaml

  # Generate coverage (complete test coverage including YAML)
  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    needs: [test-core, test-yaml]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Run go mod download
        run: make install

      - name: Generate Coverage (Core + YAML)
        run: make coverage-yaml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage-yaml.txt
          token: ${{ secrets.CODECOV_TOKEN }}
